DROP TABLE IF EXISTS actor CASCADE;
CREATE TABLE actor (
  actor_id SERIAL PRIMARY KEY,
  first_name VARCHAR(45) NOT NULL,
  last_name VARCHAR(45) NOT NULL,
  last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

DROP TABLE IF EXISTS category CASCADE;
CREATE TABLE category (
  category_id SERIAL PRIMARY KEY,
  name VARCHAR(25) NOT NULL,
  last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

DROP TABLE IF EXISTS customer CASCADE;
CREATE TABLE customer (
  customer_id SERIAL PRIMARY KEY,
  first_name VARCHAR(45) NOT NULL,
  last_name VARCHAR(45) NOT NULL,
  email VARCHAR(50) DEFAULT NULL,
  active BOOLEAN NOT NULL DEFAULT TRUE,
  create_date DATE NOT NULL,
  last_update TIMESTAMP not null DEFAULT CURRENT_TIMESTAMP
);

DROP TABLE IF EXISTS payment CASCADE;
CREATE TABLE payment (
  payment_id SERIAL PRIMARY KEY,
  amount DECIMAL(5,2) NOT NULL,
  payment_date DATE NOT NULL,
  last_update TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

DROP TABLE IF EXISTS film CASCADE;
CREATE TABLE film (
  film_id SERIAL PRIMARY KEY,
  title VARCHAR(255) NOT NULL,
  description TEXT DEFAULT NULL,
  release_year INTEGER DEFAULT NULL,
  language VARCHAR(255) NOT NULL,
  rental_rate DECIMAL(4,2) NOT NULL DEFAULT 4.99,
  duration INTEGER  DEFAULT NULL,
  rating VARCHAR(255) default NULL,
  special_features VARCHAR(255) DEFAULT NULL,
  last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

DROP TABLE IF EXISTS film_actor CASCADE;
CREATE TABLE film_actor (
  film_actor_id SERIAL PRIMARY KEY,
  actor_id INTEGER  NOT NULL,
  film_id INTEGER  NOT NULL,
  last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT fk_film_actor_actor FOREIGN KEY (actor_id) REFERENCES actor (actor_id) ON DELETE RESTRICT ON UPDATE CASCADE,
  CONSTRAINT fk_film_actor_film FOREIGN KEY (film_id) REFERENCES film (film_id) ON DELETE RESTRICT ON UPDATE CASCADE
);

DROP TABLE IF EXISTS film_category CASCADE;
CREATE TABLE film_category (
  film_category_id SERIAL PRIMARY KEY,
  film_id INTEGER NOT NULL,
  category_id INTEGER NOT NULL,
  last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT fk_film_category_film FOREIGN KEY (film_id) REFERENCES film (film_id) ON DELETE RESTRICT ON UPDATE CASCADE,
  CONSTRAINT fk_film_category_category FOREIGN KEY (category_id) REFERENCES category (category_id) ON DELETE RESTRICT ON UPDATE CASCADE
);

DROP TABLE IF EXISTS rental CASCADE;
CREATE TABLE rental (
  rental_id SERIAL PRIMARY KEY,
  rental_date DATE NULL,
  film_id INTEGER NOT NULL,
  payment_id INTEGER NOT NULL,
  return_date DATE DEFAULT NULL,
  last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT fk_rental_film FOREIGN KEY (film_id) REFERENCES film (film_id) ON DELETE RESTRICT ON UPDATE CASCADE,
  CONSTRAINT fk_rental_payment FOREIGN KEY (payment_id) REFERENCES payment (payment_id) ON DELETE RESTRICT ON UPDATE CASCADE
);